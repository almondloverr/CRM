# Generated by Django 4.2.11 on 2024-05-10 16:47

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('contact_number', models.CharField(max_length=20, verbose_name='Контактный телефон')),
                ('address', models.TextField(blank=True, default='', null=True, verbose_name='Адрес')),
                ('comments', models.TextField(blank=True, default='', null=True, verbose_name='Комментарии к клиенту')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.CharField(max_length=100, verbose_name='Номер договора')),
                ('create_date', models.DateField(verbose_name='Дата создания')),
                ('completion_date', models.DateField(verbose_name='Ориентировочная дата выполнения')),
                ('duration', models.IntegerField(verbose_name='Сроки выполнения по договору')),
                ('total_value', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Общая стоимость заказа по договору')),
                ('total_work_cost', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Общая стоимость работ')),
                ('payment_type', models.CharField(choices=[('cash', 'Наличные'), ('card', 'По карте'), ('transaction', 'Переводом')], default='cash', max_length=100, verbose_name='Способ оплаты')),
                ('prepayment_share', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Процент предоплаты')),
                ('prepayment_value', models.IntegerField(verbose_name='Сумма предоплаты')),
                ('prepayment_date', models.DateField(blank=True, null=True, verbose_name='Дата предоплаты')),
                ('is_prepayment_paid', models.BooleanField(default=False, verbose_name='Предоплата произведена')),
                ('postpayment_value', models.IntegerField(blank=True, verbose_name='Остаток')),
                ('postpayment_date', models.DateField(blank=True, null=True, verbose_name='Дата оплаты')),
                ('is_postpayment_paid', models.BooleanField(default=False, verbose_name='Оплата произведена')),
                ('comments', models.TextField(blank=True, default='', null=True, verbose_name='Комментарии к договору')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newDivanApp.client', verbose_name='Клиент')),
            ],
            options={
                'verbose_name': 'Договор',
                'verbose_name_plural': 'Договоры',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название отдела')),
                ('descr', models.TextField(blank=True, null=True, verbose_name='Описание отдела')),
            ],
            options={
                'verbose_name': 'Отдел',
                'verbose_name_plural': 'Отделы',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('status', models.CharField(choices=[('working', 'Работает'), ('not_working', 'Уволен'), ('probation', 'Испытательный срок')], max_length=50, verbose_name='Статус')),
                ('employment_date', models.DateField(verbose_name='Дата приема на работу')),
                ('termination_date', models.DateField(blank=True, null=True, verbose_name='Дата увольнения')),
                ('citizenship', models.CharField(max_length=50, verbose_name='Гражданство')),
                ('residence_address', models.CharField(max_length=255, verbose_name='Адрес проживания')),
                ('registration_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес регистрации')),
                ('passport_series', models.CharField(max_length=10, verbose_name='Серия')),
                ('passport_number', models.CharField(max_length=50, verbose_name='Номер')),
                ('passport_issued_by', models.CharField(max_length=255, verbose_name='Кем выдан')),
                ('passport_issue_date', models.DateField(verbose_name='Дата выдачи')),
                ('type_salary', models.CharField(choices=[('fixed', 'Фиксированная'), ('not_fixed', 'Сдельная')], max_length=50, verbose_name='Тип оплаты')),
                ('salary', models.IntegerField(blank=True, null=True, verbose_name='Зарплата')),
                ('payment_details', models.TextField(blank=True, default='', null=True, verbose_name='Реквизиты оплаты')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])], verbose_name='Аватар')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newDivanApp.department', verbose_name='Отдел')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
            },
        ),
        migrations.CreateModel(
            name='JobTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Должность')),
                ('descr', models.TextField(blank=True, default='', null=True, verbose_name='Описание')),
                ('min_salary', models.IntegerField(blank=True, null=True, verbose_name='Минимальное значение зарплаты для должности')),
                ('max_salary', models.IntegerField(blank=True, null=True, verbose_name='Максимальное значение зарплаты для должности')),
                ('access_lvl', models.IntegerField(null=True, verbose_name='Уровень доступа')),
            ],
            options={
                'verbose_name': 'Должность',
                'verbose_name_plural': 'Должности',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=100, verbose_name='Номер заказа')),
                ('source', models.CharField(choices=[('site', 'Сайт'), ('recommendation', 'Рекомендация'), ('returning_customer', 'Повторный клиент')], max_length=100, verbose_name='Источник')),
                ('status', models.CharField(choices=[('registered', 'Заказ зарегистрирован'), ('to_pickup', 'Необходимо забрать'), ('is_picked', 'Заказ привезли'), ('to_do', 'В очереди'), ('in_progress', 'Взято в работу'), ('in_review', 'Ждет проверки управляющего'), ('closed', 'Выполнено успешно'), ('suspended', 'Приостановлено'), ('to_deliver', 'Необходима доставка'), ('delivered', 'Доставлено клиенту')], max_length=100, verbose_name='Статус заказа')),
                ('comments', models.TextField(blank=True, default='', null=True, verbose_name='Комментарии')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newDivanApp.contract', verbose_name='Договор')),
                ('executor1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='executor1_orders', to='newDivanApp.employee', verbose_name='Исполнитель 1')),
                ('executor2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='executor2_orders', to='newDivanApp.employee', verbose_name='Исполнитель 2')),
                ('executor3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='executor3_orders', to='newDivanApp.employee', verbose_name='Исполнитель 3')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managed_orders', to='newDivanApp.employee', verbose_name='Менеджер')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='TechnicalSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_qty', models.PositiveIntegerField(verbose_name='Кол-во изделий')),
                ('short_descr', models.CharField(max_length=100, verbose_name='Краткое описание ТЗ')),
                ('full_descr', models.TextField(blank=True, default='', verbose_name='Полное описание ТЗ')),
                ('work_type1', models.CharField(choices=[('create', 'Изготовление'), ('reupholster', 'Перетяжка'), ('restoration', 'Реставрация'), ('new_build', 'Новодел')], max_length=50, verbose_name='Тип работ 1')),
                ('work_type2', models.CharField(blank=True, choices=[('create', 'Изготовление'), ('reupholster', 'Перетяжка'), ('restoration', 'Реставрация'), ('new_build', 'Новодел')], max_length=50, null=True, verbose_name='Тип работ 2')),
                ('furniture_type1', models.CharField(choices=[('soft', 'Мягкая мебель'), ('cabinet', 'Корпусная мебель')], max_length=50, verbose_name='Тип мебели 1')),
                ('furniture_type2', models.CharField(blank=True, choices=[('soft', 'Мягкая мебель'), ('cabinet', 'Корпусная мебель')], max_length=50, null=True, verbose_name='Тип мебели 2')),
                ('item_type', models.CharField(max_length=30, verbose_name='Тип изделия')),
                ('comments', models.TextField(blank=True, default='', null=True, verbose_name='Комментарии к ТЗ')),
                ('photo1', models.ImageField(blank=True, null=True, upload_to='technical_specifications/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])], verbose_name='Фото 1')),
                ('photo2', models.ImageField(blank=True, null=True, upload_to='technical_specifications/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])], verbose_name='Фото 2')),
                ('photo3', models.ImageField(blank=True, null=True, upload_to='technical_specifications/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])], verbose_name='Фото 3')),
                ('photo4', models.ImageField(blank=True, null=True, upload_to='technical_specifications/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])], verbose_name='Фото 4')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newDivanApp.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Техзадание',
                'verbose_name_plural': 'Техзадания',
            },
        ),
        migrations.CreateModel(
            name='PickupDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_picked', models.BooleanField(default=False, verbose_name='Забран')),
                ('pickup_type', models.CharField(choices=[('self_delivery', 'Клиент привозит сам'), ('pickup', 'Забирает курьер')], max_length=50, verbose_name='Тип забора')),
                ('pickup_date', models.DateField(blank=True, null=True, verbose_name='Дата забора')),
                ('pickup_time', models.TimeField(blank=True, null=True, verbose_name='Время')),
                ('is_delivered', models.BooleanField(default=False, verbose_name='Доставлен')),
                ('delivery_type', models.CharField(choices=[('self_delivery', 'Самовывоз клиентом'), ('delivery', 'Доставляет курьер')], max_length=50, verbose_name='Тип доставки')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='Дата доставки')),
                ('delivery_time', models.TimeField(blank=True, null=True, verbose_name='Время')),
                ('pickup_comments', models.TextField(blank=True, default='', null=True, verbose_name='Комментарии')),
                ('delivery_comments', models.TextField(blank=True, default='', null=True, verbose_name='Комментарии')),
                ('delivery_guy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delivery_guy', to='newDivanApp.employee', verbose_name='Ответственный за доставку')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newDivanApp.order', verbose_name='Заказ')),
                ('pickup_guy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pickup_guy', to='newDivanApp.employee', verbose_name='Ответственный за забор')),
            ],
            options={
                'verbose_name': 'Забор/Доставка',
                'verbose_name_plural': 'Заборы/Доставки',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование материала')),
                ('in_stock', models.BooleanField(default=False, verbose_name='Материал в наличии на складе')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Стоимость материала')),
                ('order_status', models.CharField(blank=True, choices=[('not_ordered', 'Не заказан'), ('ordered', 'Заказан')], default='not_ordered', max_length=100, verbose_name='Статус заказа материала')),
                ('order_date', models.DateField(blank=True, null=True, verbose_name='Дата заказа материала')),
                ('payment_status', models.CharField(blank=True, choices=[('paid', 'Оплачен'), ('unpaid', 'Не оплачен'), ('partial', 'Частично оплачен')], default='unpaid', max_length=100, verbose_name='Статус оплаты материала')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Дата оплаты материала')),
                ('fitting_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Наименование фурнитуры')),
                ('fitting_in_stock', models.BooleanField(blank=True, default=False, null=True, verbose_name='Фурнитура в наличии на складе')),
                ('comments', models.TextField(blank=True, default='', null=True, verbose_name='Комментарии')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newDivanApp.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Материал',
                'verbose_name_plural': 'Материалы',
            },
        ),
        migrations.CreateModel(
            name='Firm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=100, verbose_name='Краткое наименование компании')),
                ('full_name', models.CharField(max_length=255, verbose_name='Полное наименование компании')),
                ('legal_address', models.TextField(blank=True, default='', verbose_name='Юридический адрес')),
                ('actual_address', models.TextField(blank=True, default='', verbose_name='Фактический адрес')),
                ('INN', models.CharField(blank=True, max_length=12, null=True, verbose_name='ИНН')),
                ('KPP', models.CharField(blank=True, max_length=9, null=True, verbose_name='КПП')),
                ('OGRN', models.CharField(blank=True, max_length=15, null=True, verbose_name='ОГРН')),
                ('contact_number', models.CharField(max_length=20, verbose_name='Контактный телефон')),
                ('corporate_number', models.CharField(max_length=20, null=True, verbose_name='Корпоративный номер')),
                ('comments', models.TextField(blank=True, default='', null=True, verbose_name='Комментарии')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newDivanApp.client', verbose_name='Контактное лицо')),
            ],
            options={
                'verbose_name': 'Клиентская фирма',
                'verbose_name_plural': 'Клиентские фирмы',
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='position',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newDivanApp.jobtitle', verbose_name='Должность'),
        ),
        migrations.AddField(
            model_name='contract',
            name='firm',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='newDivanApp.firm', verbose_name='Фирма'),
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_descr', models.TextField(blank=True, default='', verbose_name='Описание работы')),
                ('status', models.CharField(choices=[('backlog', 'Активность зарегистрирована'), ('in_review', 'Ждет проверки управляющего'), ('to_do', 'К выполнению работником'), ('in_progress', 'Взято в работу'), ('closed_positive', 'Выполнено успешно'), ('closed_negative', 'Выполнено неуспешно'), ('needs_rework', 'Необходима доработка'), ('suspended', 'Приостановлено')], default='backlog', max_length=100, verbose_name='Статус активности')),
                ('date_start', models.DateField(verbose_name='Дата начала')),
                ('date_review', models.DateField(blank=True, null=True, verbose_name='Дата проверки управляющим')),
                ('date_end', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('total_work_cost', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Общая стоимость работы')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Оплата произведена')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Дата оплаты')),
                ('photo1', models.ImageField(blank=True, null=True, upload_to='activity/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])], verbose_name='Фото 1')),
                ('photo2', models.ImageField(blank=True, null=True, upload_to='activity/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])], verbose_name='Фото 2')),
                ('photo3', models.ImageField(blank=True, null=True, upload_to='activity/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])], verbose_name='Фото 3')),
                ('photo4', models.ImageField(blank=True, null=True, upload_to='activity/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])], verbose_name='Фото 4')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='newDivanApp.employee', verbose_name='Ответственный')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newDivanApp.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Активность',
                'verbose_name_plural': 'Активности',
            },
        ),
    ]
